#!/bin/sh
#
# Common functions for TazPanel CGI and cmdline interface
#

# Include gettext helper script.
. /usr/bin/gettext.sh

# Export package name for gettext.
TEXTDOMAIN='tazpanel'
export TEXTDOMAIN

# We need a config file first
get_config() {
	CONFIG="/etc/slitaz/tazpanel.conf"
	[ -f $CONFIG ] && . $CONFIG
	[ -f tazpanel.conf ] && . tazpanel.conf
	[ ! -f $PANEL/lib/libtazpanel ] && \
		echo "No config file or libtazpanel found: $CONFIG" && \
		exit 1
}

# TazPanel QUERY_STRING parser returns: CASE WANT VAR_1 VAR_4
# we use that to help get URL string variables and user names
query_string_parser() {
	id=0
	for var in $(echo "$QUERY_STRING" | sed s'@=@ @'g)
	do
		id=$((id + 1))
		var=${var#&}
		case "$id" in
			'1') CASE=${var% } ;;
			'2') WANT=${var% } ;;
			'3') VAR_1=${var% } ;;
			'4') VAR_2=${var% } ;;
		esac
	done
}

# Syntax highlighting for config file and SHell scripts
# HTML entities: -e 's|&|\&amp;|g' -e 's|<|\&lt;|g' -e 's|>|\&gt;|g'
syntax_highlighter() {
	case $1 in
		conf)
			sed -e s"#^\#\([^']*\)#<span class='conf-comment'>\0</span>#"g \
				-e s"#^[A-Z]\([^']*\)=#<span class='conf-var'>\0</span>#"g \
				-e s"#^[a-z]\([^']*\)#<span class='conf-var'>\0</span>#"g \
				-e s"#\"\([^']*\)\"#<span class='conf-val'>\0</span>#"g ;;
		sh)
			sed -e s"#^\#\([^']*\)#<span class='sh-comment'>\0</span>#"g \
				-e s"#\"\([^']*\)\"#<span class='sh-val'>\0</span>#"g
	esac
}

# LOG activities
log() {
	grep ^[a-zA-Z0-9] | sed s'/\.*\]//' >> $LOG_FILE
}

# Network interface status
interface_status() {
	if 	ifconfig | grep -A 1 $i | grep -q inet; then
		ip=`ifconfig | grep -A 1 $i | grep inet | \
			awk '{ print $2 }' | cut -d ":" -f 2`
		echo "<td>connected</td><td>$ip</td>"
	else
		echo "<td>----</td><td>----</td>"
	fi
}

# Catch network interface (used in summary and network main page)
list_network_interfaces() {
	table_start
	cat << EOT
<tr id="thead">
	<td>`gettext "Interface"`</td>
	<td>`gettext "Name"`</td>
	<td>`gettext "Status"`</td>
	<td>`gettext "IP Address"`</td>
</tr>
EOT
	for i in `ls /sys/class/net`
	do
		case $i in
			eth*)
				echo "<tr><td><a href='/network.cgi?eth'>
					<img src='$IMAGES/ethernet.png' />$i</a></td>
					<td>Ethernet</td> `interface_status`</tr>" ;;
			wlan*|ath*|ra*)
				echo "<tr><td><a href='/network.cgi?wifi'>
					<img src='$IMAGES/wireless.png' />$i</a></td>
					<td>Wireless</td> `interface_status`</tr>" ;;
			lo)
				echo "<tr><td><img src='$IMAGES/loopback.png' />$i</td>
				<td>Loopback</td> `interface_status`</tr>" ;;
			*)
				continue ;;
		esac
	done
	table_end
}

#
# xHTML 5 (header and footer skel are from the style)
#

loading_msg() {
	cat << EOT
<script type="text/javascript">
	document.write('<div id="loading"><img src="/styles/default/images/loader.gif" />$LOADING_MSG</div>');
</script>
EOT
}

xhtml_header() {
	cat ${PANEL}$HEADER | sed s/'- %TITLE%'/"$TITLE"/
	if [ $DEBUG == "1" ]; then
		cat << EOT
<pre class='debug'>
QUERY_STRING="$QUERY_STRING"
CASE="$CASE" WANT="$WANT" VAR_1="$VAR_1"
</pre>
EOT
	fi
}

xhtml_footer() {
	cat ${PANEL}$FOOTER
}

table_start() {
	cat << EOT
<table>
	<tbody>
EOT
}

table_end () {
	cat << EOT
	</tbody>
</table>
EOT
	
}
